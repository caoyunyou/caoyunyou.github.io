import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as n,e as p}from"./app-KMmNggxv.js";const a={},o=p('<h2 id="mq作用" tabindex="-1"><a class="header-anchor" href="#mq作用"><span><strong>MQ作用：</strong></span></a></h2><ul><li><p>减少系统之间的直接调用：</p><p>通过队列进行关联，生产者把消息放入队列，消费者从队列中那消息</p></li><li><p>降低处理等待时间</p><p>请求处理的具体任务交由队列的消费者进行异步处理</p></li><li><p>更容易进行系统业务的迁移。</p><p>队列不关注服务是什么系统，只需要知道服务对应哪个队列即可。</p><p>所以如果一个队列从A系统消费变成B系统消费只需要两步：</p><p>​ 1.A系统停止消费对应队列的消息</p><p>​ 2.B系统监听对应队列，消费消息</p></li></ul><h2 id="提要" tabindex="-1"><a class="header-anchor" href="#提要"><span><strong>提要：</strong></span></a></h2><p>解耦的意思就是降低依赖。</p><h2 id="应用解耦" tabindex="-1"><a class="header-anchor" href="#应用解耦"><span><strong>应用解耦：</strong></span></a></h2><p>不同服务之间通过MQ关联，不需要直接调用，也不需要知道消费者、生产者是谁，只需要知道自己对应哪个MQ，是消费者还是生产者。</p><p>生产者只须要到把消息丢进队列</p><p>消费者只需要到对应的队列里获取消息</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结：</strong></span></a></h2><p>对于不同服务而言，不需要知道对方是什么系统，只需要知道自己需要做什么就行了。</p>',10),i=[o];function r(l,s){return t(),n("div",null,i)}const h=e(a,[["render",r],["__file","MQ-应用解耦.html.vue"]]),m=JSON.parse('{"path":"/notes/middleware/MQ/MQ-%E5%BA%94%E7%94%A8%E8%A7%A3%E8%80%A6.html","title":"MQ-应用解耦","lang":"zh-CN","frontmatter":{"title":"MQ-应用解耦","date":"2024-03-16T00:00:00.000Z","description":"MQ作用： 减少系统之间的直接调用： 通过队列进行关联，生产者把消息放入队列，消费者从队列中那消息 降低处理等待时间 请求处理的具体任务交由队列的消费者进行异步处理 更容易进行系统业务的迁移。 队列不关注服务是什么系统，只需要知道服务对应哪个队列即可。 所以如果一个队列从A系统消费变成B系统消费只需要两步： ​ 1.A系统停止消费对应队列的消息 ​ 2...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/middleware/MQ/MQ-%E5%BA%94%E7%94%A8%E8%A7%A3%E8%80%A6.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"MQ-应用解耦"}],["meta",{"property":"og:description","content":"MQ作用： 减少系统之间的直接调用： 通过队列进行关联，生产者把消息放入队列，消费者从队列中那消息 降低处理等待时间 请求处理的具体任务交由队列的消费者进行异步处理 更容易进行系统业务的迁移。 队列不关注服务是什么系统，只需要知道服务对应哪个队列即可。 所以如果一个队列从A系统消费变成B系统消费只需要两步： ​ 1.A系统停止消费对应队列的消息 ​ 2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MQ-应用解耦\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"MQ作用：","slug":"mq作用","link":"#mq作用","children":[]},{"level":2,"title":"提要：","slug":"提要","link":"#提要","children":[]},{"level":2,"title":"应用解耦：","slug":"应用解耦","link":"#应用解耦","children":[]},{"level":2,"title":"总结：","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":1.04,"words":313},"filePathRelative":"notes/middleware/MQ/MQ-应用解耦.md","localizedDate":"2024年3月16日","excerpt":"<h2><strong>MQ作用：</strong></h2>\\n<ul>\\n<li>\\n<p>减少系统之间的直接调用：</p>\\n<p>通过队列进行关联，生产者把消息放入队列，消费者从队列中那消息</p>\\n</li>\\n<li>\\n<p>降低处理等待时间</p>\\n<p>请求处理的具体任务交由队列的消费者进行异步处理</p>\\n</li>\\n<li>\\n<p>更容易进行系统业务的迁移。</p>\\n<p>队列不关注服务是什么系统，只需要知道服务对应哪个队列即可。</p>\\n<p>所以如果一个队列从A系统消费变成B系统消费只需要两步：</p>\\n<p>​\\t1.A系统停止消费对应队列的消息</p>\\n<p>​\\t2.B系统监听对应队列，消费消息</p>\\n</li>\\n</ul>","autoDesc":true}');export{h as comp,m as data};
