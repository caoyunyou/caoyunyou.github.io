import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-uE64BTmb.js";const t={},o=e(`<h2 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备"><span>数据准备：</span></a></h2><h4 id="_1-创建测试表" tabindex="-1"><a class="header-anchor" href="#_1-创建测试表"><span>1.创建测试表：</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>json_test<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>ID<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>JSON_VALUE<span class="token punctuation">\`</span></span> json <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>ID<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;JSON函数测试表&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-准备测试数据" tabindex="-1"><a class="header-anchor" href="#_2-准备测试数据"><span>2.准备测试数据：</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> json_test<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>ID<span class="token punctuation">\`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>JSON_VALUE<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>

<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;{&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:14}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;{&quot;name&quot;:&quot;李四&quot;,&quot;gender&quot;:&quot;Male&quot;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用json操作" tabindex="-1"><a class="header-anchor" href="#常用json操作"><span>常用JSON操作：</span></a></h2><h4 id="_1-json-set-json-doc-path-val-path-val" tabindex="-1"><a class="header-anchor" href="#_1-json-set-json-doc-path-val-path-val"><span>1.<code>JSON_SET(json_doc, path, val[, path, val] ...)</code></span></a></h4><h6 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数：</span></a></h6><ol><li>json_doc：即需要操作的JSON信息</li><li>path：对应json中的某个key</li><li>val：要设置的值</li><li>后面的数组表示可以对多个key设值</li></ol><h6 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能：</span></a></h6><p>替换JSON对应层级key的值，如果 key 不存在，就新增</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">#### 查询原值：{&quot;age&quot;: 14, &quot;name&quot;: &quot;张三&quot;}</span>
<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>JSON_VALUE <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>


<span class="token comment">-- 1.如果存在：{&quot;age&quot;: 18, &quot;name&quot;: &quot;张三&quot;}</span>
<span class="token keyword">SELECT</span> JSON_SET<span class="token punctuation">(</span>a<span class="token punctuation">.</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.age&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>


<span class="token comment">-- 1.如果不存在：{&quot;age&quot;: 14, &quot;name&quot;: &quot;张三&quot;, &quot;gender&quot;: &quot;MALE&quot;}</span>
<span class="token keyword">SELECT</span> JSON_SET<span class="token punctuation">(</span>a<span class="token punctuation">.</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MALE&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续写博客内容如下:</p><ol start="2"><li><h4 id="json-replace-json-doc-path-val-path-val" tabindex="-1"><a class="header-anchor" href="#json-replace-json-doc-path-val-path-val"><span><code>JSON_REPLACE(json_doc, path, val[, path, val] ...)</code></span></a></h4></li></ol><h6 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1"><span>参数:</span></a></h6><ol><li>json_doc: 需要操作的JSON信息</li><li>path: 对应json中的某个key</li><li>val: 要替换的值</li><li>后面的数组表示可以对多个key进行替换</li></ol><h6 id="功能-1" tabindex="-1"><a class="header-anchor" href="#功能-1"><span>功能:</span></a></h6><p>用新值替换掉原JSON字符串中指定的值。如果不存在该path，则什么也不做。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查询原值: {&quot;gender&quot;: &quot;Male&quot;, &quot;name&quot;: &quot;李四&quot;}</span>
<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>JSON_VALUE <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 替换值: {&quot;gender&quot;: &quot;Female&quot;, &quot;name&quot;: &quot;李四&quot;} </span>
<span class="token keyword">SELECT</span> JSON_REPLACE<span class="token punctuation">(</span>a<span class="token punctuation">.</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Female&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 不存在的path不做替换: {&quot;gender&quot;: &quot;Male&quot;, &quot;name&quot;: &quot;李四&quot;}</span>
<span class="token keyword">SELECT</span> JSON_REPLACE<span class="token punctuation">(</span>a<span class="token punctuation">.</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.age&#39;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test a <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><h4 id="json-remove-json-doc-path-path" tabindex="-1"><a class="header-anchor" href="#json-remove-json-doc-path-path"><span><code>JSON_REMOVE(json_doc, path[, path] ...)</code></span></a></h4></li></ol><h6 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2"><span>参数:</span></a></h6><ol><li>json_doc: 需要操作的JSON信息</li><li>path: 对应json中要删除的key的路径</li></ol><h6 id="功能-2" tabindex="-1"><a class="header-anchor" href="#功能-2"><span>功能:</span></a></h6><p>删除JSON中某个key对应的值。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查看原始值: {&quot;age&quot;: 14, &quot;name&quot;: &quot;张三&quot;}</span>
<span class="token keyword">SELECT</span> JSON_VALUE <span class="token keyword">FROM</span> json_test <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- 删除age: {&quot;name&quot;: &quot;张三&quot;}</span>
<span class="token keyword">SELECT</span> JSON_REMOVE<span class="token punctuation">(</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.age&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><h4 id="json-extract-json-doc-path-path" tabindex="-1"><a class="header-anchor" href="#json-extract-json-doc-path-path"><span><code>JSON_EXTRACT(json_doc, path[, path] ...)</code></span></a></h4></li></ol><h6 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3"><span>参数:</span></a></h6><ol><li>json_doc: 需要操作的JSON信息</li><li>path: 对应json中要提取值的key路径</li></ol><h6 id="功能-3" tabindex="-1"><a class="header-anchor" href="#功能-3"><span>功能:</span></a></h6><p>从原JSON中提取某个key对应的值。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查看原始值: {&quot;gender&quot;: &quot;Male&quot;, &quot;name&quot;: &quot;李四&quot;}</span>
<span class="token keyword">SELECT</span> JSON_VALUE <span class="token keyword">FROM</span> json_test <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 提取name的值: &quot;李四&quot;</span>
<span class="token keyword">SELECT</span> JSON_EXTRACT<span class="token punctuation">(</span>JSON_VALUE<span class="token punctuation">,</span> <span class="token string">&#39;$.name&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> json_test <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h4><p>通过上面这些常用的JSON函数的使用示例，相信大家已经对MySQL的JSON操作函数有了一定了解。在实际开发中可以根据需求灵活使用这些函数来满足操作JSON字段的需求。</p>`,33),p=[o];function l(c,i){return s(),a("div",null,p)}const r=n(t,[["render",l],["__file","MySQL-JSON操作.html.vue"]]),k=JSON.parse('{"path":"/notes/mysql/MySQL-JSON%E6%93%8D%E4%BD%9C.html","title":"MySQL-JSON操作","lang":"zh-CN","frontmatter":{"title":"MySQL-JSON操作","date":"2024-03-18T00:00:00.000Z","description":"数据准备： 1.创建测试表： 2.准备测试数据： 常用JSON操作： 1.JSON_SET(json_doc, path, val[, path, val] ...) 参数： json_doc：即需要操作的JSON信息 path：对应json中的某个key val：要设置的值 后面的数组表示可以对多个key设值 功能： 替换JSON对应层级key的值，...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/mysql/MySQL-JSON%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"MySQL-JSON操作"}],["meta",{"property":"og:description","content":"数据准备： 1.创建测试表： 2.准备测试数据： 常用JSON操作： 1.JSON_SET(json_doc, path, val[, path, val] ...) 参数： json_doc：即需要操作的JSON信息 path：对应json中的某个key val：要设置的值 后面的数组表示可以对多个key设值 功能： 替换JSON对应层级key的值，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-03-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL-JSON操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"数据准备：","slug":"数据准备","link":"#数据准备","children":[]},{"level":2,"title":"常用JSON操作：","slug":"常用json操作","link":"#常用json操作","children":[]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":2,"words":600},"filePathRelative":"notes/mysql/MySQL-JSON操作.md","localizedDate":"2024年3月18日","excerpt":"<h2>数据准备：</h2>\\n<h4>1.创建测试表：</h4>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>json_test<span class=\\"token punctuation\\">`</span></span> <span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>ID<span class=\\"token punctuation\\">`</span></span> <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token boolean\\">NULL</span> <span class=\\"token keyword\\">AUTO_INCREMENT</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">\'主键\'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>JSON_VALUE<span class=\\"token punctuation\\">`</span></span> json <span class=\\"token keyword\\">DEFAULT</span> <span class=\\"token boolean\\">NULL</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token keyword\\">PRIMARY</span> <span class=\\"token keyword\\">KEY</span> <span class=\\"token punctuation\\">(</span><span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>ID<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">ENGINE</span><span class=\\"token operator\\">=</span><span class=\\"token keyword\\">InnoDB</span> <span class=\\"token keyword\\">COMMENT</span> <span class=\\"token string\\">\'JSON函数测试表\'</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,k as data};
