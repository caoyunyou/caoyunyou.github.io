import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as e,e as a}from"./app-UJf0YqK6.js";const t={},i=a(`<h2 id="_1-条件语句" tabindex="-1"><a class="header-anchor" href="#_1-条件语句"><span>1.条件语句</span></a></h2><p>在进行逻辑判断时，我们需要用到条件语句，Python 提供了 <code>if</code>、<code>elif</code>、<code>else</code> 来进行逻辑判断。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">if</span> 判断条件<span class="token number">1</span><span class="token punctuation">:</span>
    执行语句<span class="token number">1</span>
<span class="token keyword">elif</span> 判断条件<span class="token number">2</span><span class="token punctuation">:</span>
    执行语句<span class="token number">2</span>
<span class="token keyword">else</span>
	执行语句<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-循环语句" tabindex="-1"><a class="header-anchor" href="#_2-循环语句"><span>2.循环语句</span></a></h2><p>当需要多次重复执行时，我们要用到循环语句，Python 提供了 for 循环和 while 循环。</p><h3 id="_2-1-for循环" tabindex="-1"><a class="header-anchor" href="#_2-1-for循环"><span>2.1 for循环</span></a></h3><p>for循环可以遍历任何序列，比如：字符串。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&#39;Python&#39;</span>
<span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>P
y
t
h
o
n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-while循环" tabindex="-1"><a class="header-anchor" href="#_2-2-while循环"><span>2.2 while循环</span></a></h3><p>while循环，满足条件循环时进行循环，不满足条件时，退出循环。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
m <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">while</span> m <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token operator">+</span>m
    m <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">55</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3-break" tabindex="-1"><a class="header-anchor" href="#_2-3-break"><span>2.3 break</span></a></h3><p>break 用在 for 循环和 while 循环语句中，用来终止整个循环。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;Python&quot;</span>
<span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> s <span class="token operator">==</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>P
y
t
h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-continue" tabindex="-1"><a class="header-anchor" href="#_2-4-continue"><span>2.4 continue</span></a></h3><p>continue 用在 for 循环和 while 循环语句中，用来终止本次循环。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;Python&quot;</span>
<span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token string">&#39;o&#39;</span>
    	<span class="token keyword">continue</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>P
y
t
h
n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-pass语句" tabindex="-1"><a class="header-anchor" href="#_3-pass语句"><span>3.pass语句</span></a></h2><p>pass语句是空语句，它不做任何事情，一般做占位语句，作用是保持程序结构的完整性。</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,34),l=[i];function p(o,r){return s(),e("div",null,l)}const u=n(t,[["render",p],["__file","Python 基础(2)基本语句.html.vue"]]),h=JSON.parse('{"path":"/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(2)%E5%9F%BA%E6%9C%AC%E8%AF%AD%E5%8F%A5.html","title":"Python 基础(2)基本语句","lang":"zh-CN","frontmatter":{"title":"Python 基础(2)基本语句","date":"2024-05-11T00:00:00.000Z","description":"1.条件语句 在进行逻辑判断时，我们需要用到条件语句，Python 提供了 if、elif、else 来进行逻辑判断。 案例： 2.循环语句 当需要多次重复执行时，我们要用到循环语句，Python 提供了 for 循环和 while 循环。 2.1 for循环 for循环可以遍历任何序列，比如：字符串。 案例： 输出结果： 2.2 while循环 wh...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(2)%E5%9F%BA%E6%9C%AC%E8%AF%AD%E5%8F%A5.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 基础(2)基本语句"}],["meta",{"property":"og:description","content":"1.条件语句 在进行逻辑判断时，我们需要用到条件语句，Python 提供了 if、elif、else 来进行逻辑判断。 案例： 2.循环语句 当需要多次重复执行时，我们要用到循环语句，Python 提供了 for 循环和 while 循环。 2.1 for循环 for循环可以遍历任何序列，比如：字符串。 案例： 输出结果： 2.2 while循环 wh..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 基础(2)基本语句\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.条件语句","slug":"_1-条件语句","link":"#_1-条件语句","children":[]},{"level":2,"title":"2.循环语句","slug":"_2-循环语句","link":"#_2-循环语句","children":[{"level":3,"title":"2.1 for循环","slug":"_2-1-for循环","link":"#_2-1-for循环","children":[]},{"level":3,"title":"2.2 while循环","slug":"_2-2-while循环","link":"#_2-2-while循环","children":[]},{"level":3,"title":"2.3 break","slug":"_2-3-break","link":"#_2-3-break","children":[]},{"level":3,"title":"2.4 continue","slug":"_2-4-continue","link":"#_2-4-continue","children":[]}]},{"level":2,"title":"3.pass语句","slug":"_3-pass语句","link":"#_3-pass语句","children":[]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"notes/python/基础/Python 基础(2)基本语句.md","localizedDate":"2024年5月11日","excerpt":"<h2>1.条件语句</h2>\\n<p>在进行逻辑判断时，我们需要用到条件语句，Python 提供了 <code>if</code>、<code>elif</code>、<code>else</code> 来进行逻辑判断。</p>\\n<p>案例：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">if</span> 判断条件<span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span>\\n    执行语句<span class=\\"token number\\">1</span>\\n<span class=\\"token keyword\\">elif</span> 判断条件<span class=\\"token number\\">2</span><span class=\\"token punctuation\\">:</span>\\n    执行语句<span class=\\"token number\\">2</span>\\n<span class=\\"token keyword\\">else</span>\\n\\t执行语句<span class=\\"token number\\">3</span>\\n</code></pre></div>","autoDesc":true}');export{u as comp,h as data};
