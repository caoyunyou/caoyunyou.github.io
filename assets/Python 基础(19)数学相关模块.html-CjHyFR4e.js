import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-UJf0YqK6.js";const e={},p=t(`<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>我们来看一下 Python 中数学相关模块，如下所示：</p><table><thead><tr><th style="text-align:center;">模块</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">math</td><td style="text-align:left;">提供了对 C 标准定义的数学函数的访问（不适用于复数）</td></tr><tr><td style="text-align:center;">cmath</td><td style="text-align:left;">提供了一些关于复数的数学函数</td></tr><tr><td style="text-align:center;">decimal</td><td style="text-align:left;">为快速正确舍入的十进制浮点运算提供支持</td></tr><tr><td style="text-align:center;">fractions</td><td style="text-align:left;">为分数运算提供支持</td></tr><tr><td style="text-align:center;">random</td><td style="text-align:left;">实现各种分布的伪随机数生成器</td></tr><tr><td style="text-align:center;">statistics</td><td style="text-align:left;">提供了用于计算数字数据的数理统计量的函数</td></tr></tbody></table><p>本文具体介绍一下相对比较常用的模块：math、decimal 和 random。</p><h2 id="_2-math-模块" tabindex="-1"><a class="header-anchor" href="#_2-math-模块"><span>2. math 模块</span></a></h2><p>先来看一下 math 模块中包含内容，如下所示：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> math
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">dir</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;__doc__&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;__loader__&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;__name__&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;__package__&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;__spec__&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;acos&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;acosh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;asin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;asinh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;atan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;atan2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;atanh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ceil&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;copysign&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cos&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cosh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;degrees&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;erf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;erfc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;exp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;expm1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fabs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;factorial&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;floor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fmod&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;frexp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fsum&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gamma&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gcd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hypot&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;inf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;isclose&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;isfinite&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;isinf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;isnan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ldexp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lgamma&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log1p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;log2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;modf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;radians&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sinh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sqrt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tanh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tau&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;trunc&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来具体看一下该模块的常用函数和常量。</p><h3 id="ceil-x" tabindex="-1"><a class="header-anchor" href="#ceil-x"><span>ceil(x)</span></a></h3><p>返回 x 的上限，即大于或者等于 x 的最小整数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floor-x" tabindex="-1"><a class="header-anchor" href="#floor-x"><span>floor(x)</span></a></h3><p>返回 x 的向下取整，小于或等于 x 的最大整数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fabs-x" tabindex="-1"><a class="header-anchor" href="#fabs-x"><span>fabs(x)</span></a></h3><p>返回 x 的绝对值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fmod-x-y" tabindex="-1"><a class="header-anchor" href="#fmod-x-y"><span>fmod(x, y)</span></a></h3><p>返回 x/y 的余数，值为浮点数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
<span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">3</span>
y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>fmod<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="factorial-x" tabindex="-1"><a class="header-anchor" href="#factorial-x"><span>factorial(x)</span></a></h3><p>返回 x 的阶乘，如果 x 不是整数或为负数时则将引发 ValueError。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pow-x-y" tabindex="-1"><a class="header-anchor" href="#pow-x-y"><span>pow(x, y)</span></a></h3><p>返回 x 的 y 次幂。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">3</span>
y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsum-iterable" tabindex="-1"><a class="header-anchor" href="#fsum-iterable"><span>fsum(iterable)</span></a></h3><p>返回迭代器中所有元素的和。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>fsum<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gcd-x-y" tabindex="-1"><a class="header-anchor" href="#gcd-x-y"><span>gcd(x, y)</span></a></h3><p>返回整数 x 和 y 的最大公约数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">9</span>
y <span class="token operator">=</span> <span class="token number">6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sqrt-x" tabindex="-1"><a class="header-anchor" href="#sqrt-x"><span>sqrt(x)</span></a></h3><p>返回 x 的平方根。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">9</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trunc-x" tabindex="-1"><a class="header-anchor" href="#trunc-x"><span>trunc(x)</span></a></h3><p>返回 x 的整数部分。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">1.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>trunc<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exp-x" tabindex="-1"><a class="header-anchor" href="#exp-x"><span>exp(x)</span></a></h3><p>返回 e 的 x 次幂。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="log-x-base" tabindex="-1"><a class="header-anchor" href="#log-x-base"><span>log(x[, base])</span></a></h3><p>返回 x 的对数，底数默认为 e。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

x <span class="token operator">=</span> <span class="token number">10</span>
y <span class="token operator">=</span> <span class="token number">10</span>
<span class="token comment"># 不指定底数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 指定底数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token comment"># 常量 e</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>e<span class="token punctuation">)</span>
<span class="token comment"># 常量 π</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tan-x" tabindex="-1"><a class="header-anchor" href="#tan-x"><span>tan(x)</span></a></h3><p>返回 x 弧度的正切值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="atan-x" tabindex="-1"><a class="header-anchor" href="#atan-x"><span>atan(x)</span></a></h3><p>返回 x 的反正切值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>atan<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sin-x" tabindex="-1"><a class="header-anchor" href="#sin-x"><span>sin(x)</span></a></h3><p>返回 x 弧度的正弦值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="asin-x" tabindex="-1"><a class="header-anchor" href="#asin-x"><span>asin(x)</span></a></h3><p>返回 x 的反正弦值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>asin<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cos-x" tabindex="-1"><a class="header-anchor" href="#cos-x"><span>cos(x)</span></a></h3><p>返回 x 弧度的余弦值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="acos-x" tabindex="-1"><a class="header-anchor" href="#acos-x"><span>acos(x)</span></a></h3><p>返回 x 的反余弦值。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>acos<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-decimal-模块" tabindex="-1"><a class="header-anchor" href="#_3-decimal-模块"><span>3. decimal 模块</span></a></h2><p>decimal 模块为正确舍入十进制浮点运算提供了支持，相比内置的浮点类型 float，它能更加精确的控制精度，能够为精度要求较高的金融等领域提供支持。</p><p>decimal 在一个独立的 context 下工作，可以使用 getcontext() 查看当前上下文，如下所示：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span> <span class="token keyword">from</span> decimal <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> getcontext<span class="token punctuation">(</span><span class="token punctuation">)</span>
Context<span class="token punctuation">(</span>prec<span class="token operator">=</span><span class="token number">28</span><span class="token punctuation">,</span> rounding<span class="token operator">=</span>ROUND_HALF_EVEN<span class="token punctuation">,</span> Emin<span class="token operator">=</span><span class="token operator">-</span><span class="token number">999999</span><span class="token punctuation">,</span> Emax<span class="token operator">=</span><span class="token number">999999</span><span class="token punctuation">,</span> capitals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> clamp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flags<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> traps<span class="token operator">=</span><span class="token punctuation">[</span>InvalidOperation<span class="token punctuation">,</span> DivisionByZero<span class="token punctuation">,</span> Overflow<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的结果中我们可以看到 <code>prec=28</code>，这就是默认的精度，我们可以使用 <code>getcontext().prec = xxx</code> 来重新设置精度。接下来通过具体示例看一下。</p><h3 id="基本运算" tabindex="-1"><a class="header-anchor" href="#基本运算"><span>基本运算</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> decimal

d1 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span>
d2 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token number">9.9</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">+</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">-</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">*</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">/</span> d2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">11.00000000000000044408920985</span>
<span class="token operator">-</span><span class="token number">8.800000000000000266453525910</span>
<span class="token number">10.89000000000000127009514017</span>
<span class="token number">0.1111111111111111160952773272</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面结果是用了默认精度，我们重新设置下精度再来看一下：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> decimal

decimal<span class="token punctuation">.</span>getcontext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>prec <span class="token operator">=</span> <span class="token number">2</span>
d1 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span>
d2 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token number">9.9</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">+</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">-</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">*</span> d2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d1 <span class="token operator">/</span> d2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">11</span>
<span class="token operator">-</span><span class="token number">8.8</span>
<span class="token number">11</span>
<span class="token number">0.11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-random-模块" tabindex="-1"><a class="header-anchor" href="#_4-random-模块"><span>4. random 模块</span></a></h2><p>random 模块可以生成随机数，我们来看一下其常用函数。</p><h3 id="random" tabindex="-1"><a class="header-anchor" href="#random"><span>random()</span></a></h3><p>返回 [0.0, 1.0) 范围内的一个随机浮点数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uniform-a-b" tabindex="-1"><a class="header-anchor" href="#uniform-a-b"><span>uniform(a, b)</span></a></h3><p>返回 [a, b) 范围内的一个随机浮点数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">9.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="randint-a-b" tabindex="-1"><a class="header-anchor" href="#randint-a-b"><span>randint(a, b)</span></a></h3><p>返回 [a, b] 范围内的一个随机整数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="randrange-start-stop-step" tabindex="-1"><a class="header-anchor" href="#randrange-start-stop-step"><span>randrange(start, stop[, step])</span></a></h3><p>返回 [start, stop) 范围内步长为 step 的一个随机整数。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="choice-seq" tabindex="-1"><a class="header-anchor" href="#choice-seq"><span>choice(seq)</span></a></h3><p>从非空序列 seq 返回一个随机元素。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token string">&#39;abcdef&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shuffle-x-random" tabindex="-1"><a class="header-anchor" href="#shuffle-x-random"><span>shuffle(x[, random])</span></a></h3><p>将序列 x 随机打乱位置。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>l<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sample-population-k" tabindex="-1"><a class="header-anchor" href="#sample-population-k"><span>sample(population, k)</span></a></h3><p>返回从总体序列或集合中选择的唯一元素的 k 长度列表，用于无重复的随机抽样。看下示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,100),l=[p];function o(i,c){return a(),s("div",null,l)}const u=n(e,[["render",o],["__file","Python 基础(19)数学相关模块.html.vue"]]),k=JSON.parse('{"path":"/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(19)%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9D%97.html","title":"Python 基础(19)数学相关模块","lang":"zh-CN","frontmatter":{"title":"Python 基础(19)数学相关模块","date":"2024-05-15T00:00:00.000Z","description":"1. 简介 我们来看一下 Python 中数学相关模块，如下所示： 本文具体介绍一下相对比较常用的模块：math、decimal 和 random。 2. math 模块 先来看一下 math 模块中包含内容，如下所示： 接下来具体看一下该模块的常用函数和常量。 ceil(x) 返回 x 的上限，即大于或者等于 x 的最小整数。看下示例： floor(...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(19)%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 基础(19)数学相关模块"}],["meta",{"property":"og:description","content":"1. 简介 我们来看一下 Python 中数学相关模块，如下所示： 本文具体介绍一下相对比较常用的模块：math、decimal 和 random。 2. math 模块 先来看一下 math 模块中包含内容，如下所示： 接下来具体看一下该模块的常用函数和常量。 ceil(x) 返回 x 的上限，即大于或者等于 x 的最小整数。看下示例： floor(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 基础(19)数学相关模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. math 模块","slug":"_2-math-模块","link":"#_2-math-模块","children":[{"level":3,"title":"ceil(x)","slug":"ceil-x","link":"#ceil-x","children":[]},{"level":3,"title":"floor(x)","slug":"floor-x","link":"#floor-x","children":[]},{"level":3,"title":"fabs(x)","slug":"fabs-x","link":"#fabs-x","children":[]},{"level":3,"title":"fmod(x, y)","slug":"fmod-x-y","link":"#fmod-x-y","children":[]},{"level":3,"title":"factorial(x)","slug":"factorial-x","link":"#factorial-x","children":[]},{"level":3,"title":"pow(x, y)","slug":"pow-x-y","link":"#pow-x-y","children":[]},{"level":3,"title":"fsum(iterable)","slug":"fsum-iterable","link":"#fsum-iterable","children":[]},{"level":3,"title":"gcd(x, y)","slug":"gcd-x-y","link":"#gcd-x-y","children":[]},{"level":3,"title":"sqrt(x)","slug":"sqrt-x","link":"#sqrt-x","children":[]},{"level":3,"title":"trunc(x)","slug":"trunc-x","link":"#trunc-x","children":[]},{"level":3,"title":"exp(x)","slug":"exp-x","link":"#exp-x","children":[]},{"level":3,"title":"log(x[, base])","slug":"log-x-base","link":"#log-x-base","children":[]},{"level":3,"title":"常量","slug":"常量","link":"#常量","children":[]},{"level":3,"title":"tan(x)","slug":"tan-x","link":"#tan-x","children":[]},{"level":3,"title":"atan(x)","slug":"atan-x","link":"#atan-x","children":[]},{"level":3,"title":"sin(x)","slug":"sin-x","link":"#sin-x","children":[]},{"level":3,"title":"asin(x)","slug":"asin-x","link":"#asin-x","children":[]},{"level":3,"title":"cos(x)","slug":"cos-x","link":"#cos-x","children":[]},{"level":3,"title":"acos(x)","slug":"acos-x","link":"#acos-x","children":[]}]},{"level":2,"title":"3. decimal 模块","slug":"_3-decimal-模块","link":"#_3-decimal-模块","children":[{"level":3,"title":"基本运算","slug":"基本运算","link":"#基本运算","children":[]}]},{"level":2,"title":"4. random 模块","slug":"_4-random-模块","link":"#_4-random-模块","children":[{"level":3,"title":"random()","slug":"random","link":"#random","children":[]},{"level":3,"title":"uniform(a, b)","slug":"uniform-a-b","link":"#uniform-a-b","children":[]},{"level":3,"title":"randint(a, b)","slug":"randint-a-b","link":"#randint-a-b","children":[]},{"level":3,"title":"randrange(start, stop[, step])","slug":"randrange-start-stop-step","link":"#randrange-start-stop-step","children":[]},{"level":3,"title":"choice(seq)","slug":"choice-seq","link":"#choice-seq","children":[]},{"level":3,"title":"shuffle(x[, random])","slug":"shuffle-x-random","link":"#shuffle-x-random","children":[]},{"level":3,"title":"sample(population, k)","slug":"sample-population-k","link":"#sample-population-k","children":[]}]}],"git":{"createdTime":1715787719000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":4.23,"words":1270},"filePathRelative":"notes/python/基础/Python 基础(19)数学相关模块.md","localizedDate":"2024年5月15日","excerpt":"<h2>1. 简介</h2>\\n<p>我们来看一下 Python 中数学相关模块，如下所示：</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">模块</th>\\n<th style=\\"text-align:left\\">描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">math</td>\\n<td style=\\"text-align:left\\">提供了对 C 标准定义的数学函数的访问（不适用于复数）</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">cmath</td>\\n<td style=\\"text-align:left\\">提供了一些关于复数的数学函数</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">decimal</td>\\n<td style=\\"text-align:left\\">为快速正确舍入的十进制浮点运算提供支持</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">fractions</td>\\n<td style=\\"text-align:left\\">为分数运算提供支持</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">random</td>\\n<td style=\\"text-align:left\\">实现各种分布的伪随机数生成器</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">statistics</td>\\n<td style=\\"text-align:left\\">提供了用于计算数字数据的数理统计量的函数</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{u as comp,k as data};
