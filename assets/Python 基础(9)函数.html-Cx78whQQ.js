import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-B5MVoM9i.js";const t={},p=e(`<h3 id="_1-自定义函数" tabindex="-1"><a class="header-anchor" href="#_1-自定义函数"><span>1.自定义函数</span></a></h3><p>Python 使用 def 关键字来声明函数，格式如下：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span>参数<span class="token punctuation">)</span><span class="token punctuation">:</span>
    函数体
    <span class="token keyword">return</span> 返回值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要定义一个无任何功能的空函数，函数体只写 <code>pass</code> 即可。格式如下所示：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们不确定参数的个数时，可以使用不定长参数，在参数名前加 <code>*</code> 进行声明，格式如下所示：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> 函数名<span class="token punctuation">(</span><span class="token operator">*</span>参数名<span class="token punctuation">)</span><span class="token punctuation">:</span>
    函数体
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还可以使用<code>lambda</code>定义匿名函数，格式如下所示：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">lambda</span> 参数<span class="token punctuation">:</span>表达式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 空函数</span>
<span class="token keyword">def</span> <span class="token function">empty_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token comment"># 无返回值</span>
<span class="token keyword">def</span> <span class="token function">no_ret</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;无返回值函数：&#39;</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span>

<span class="token comment"># 有返回值</span>
<span class="token keyword">def</span> <span class="token function">sum_func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> a<span class="token operator">+</span>b

<span class="token comment"># 不定长参数</span>
<span class="token keyword">def</span> <span class="token function">bdc_func</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> params<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># 匿名函数</span>
sub_res <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token punctuation">:</span>a<span class="token operator">-</span>b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-函数调用" tabindex="-1"><a class="header-anchor" href="#_2-函数调用"><span>2.函数调用</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>empty_func<span class="token punctuation">(</span><span class="token punctuation">)</span>
no_ret<span class="token punctuation">(</span><span class="token string">&#39;撒&#39;</span><span class="token punctuation">)</span>
sum_func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
bdc_func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[p];function c(i,l){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","Python 基础(9)函数.html.vue"]]),m=JSON.parse('{"path":"/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(9)%E5%87%BD%E6%95%B0.html","title":"Python 基础(9)函数","lang":"zh-CN","frontmatter":{"title":"Python 基础(9)函数","date":"2024-05-13T00:00:00.000Z","description":"1.自定义函数 Python 使用 def 关键字来声明函数，格式如下： 如果要定义一个无任何功能的空函数，函数体只写 pass 即可。格式如下所示： 当我们不确定参数的个数时，可以使用不定长参数，在参数名前加 * 进行声明，格式如下所示： 我们还可以使用lambda定义匿名函数，格式如下所示： 案例： 2.函数调用","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(9)%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 基础(9)函数"}],["meta",{"property":"og:description","content":"1.自定义函数 Python 使用 def 关键字来声明函数，格式如下： 如果要定义一个无任何功能的空函数，函数体只写 pass 即可。格式如下所示： 当我们不确定参数的个数时，可以使用不定长参数，在参数名前加 * 进行声明，格式如下所示： 我们还可以使用lambda定义匿名函数，格式如下所示： 案例： 2.函数调用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 基础(9)函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":3,"title":"1.自定义函数","slug":"_1-自定义函数","link":"#_1-自定义函数","children":[]},{"level":3,"title":"2.函数调用","slug":"_2-函数调用","link":"#_2-函数调用","children":[]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":0.78,"words":235},"filePathRelative":"notes/python/基础/Python 基础(9)函数.md","localizedDate":"2024年5月13日","excerpt":"<h3>1.自定义函数</h3>\\n<p>Python 使用 def 关键字来声明函数，格式如下：</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> 函数名<span class=\\"token punctuation\\">(</span>参数<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    函数体\\n    <span class=\\"token keyword\\">return</span> 返回值\\n</code></pre></div>","autoDesc":true}');export{r as comp,m as data};
