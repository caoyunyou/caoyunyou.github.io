import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-D0-ERSok.js";const p="/assets/650-DYTcgmxp.jpg",e={},o=t('<h2 id="_1-发送邮件" tabindex="-1"><a class="header-anchor" href="#_1-发送邮件"><span>1.发送邮件</span></a></h2><p>SMTP 全称 Simple Mail Transfer Protocol，中文译为简单邮件传输协议，它能跨越网络传输邮件，可实现相同网络处理进程之间的邮件传输，也可通过中继器或网关实现进程与其他网络之间的邮件传输。</p><p>Python 的 smtplib 模块对 SMTP 做了封装，可以很方便的实现邮件的发送，同时提供了 email 模块来构造邮件。</p><p><strong>smtplib.SMTP(host=&#39;&#39;, port=0, local_hostname=None, [timeout, ]source_address=None)</strong></p><p>用于创建 SMTP 对象。参数说明如下：</p><ul><li>host：SMTP 服务器主机。</li><li>port：端口号。</li><li>local_hostname：如果 SMTP 在本机，只需指定服务器地址为 localhost 即可。</li><li>timeout：指定超时时间，可选。</li><li>source_address：该参数允许绑定到具有多个网络接口的计算机中的某些特定源地址或某些特定源 TCP 端口。</li></ul><p><strong>SMTP.sendmail(from_addr, to_addrs, msg, mail_options=(), rcpt_options=())</strong></p><p>发送邮件。参数说明如下：</p><ul><li>from_addr：邮件发送者地址。</li><li>to_addrs：邮件接收者地址。</li><li>msg：邮件内容。</li></ul><p>以 QQ 邮箱为例，我们先用发送者账号登录 QQ 邮箱，登录后依次点击“设置”、“账户”，找到如下所示位置：</p><figure><img src="'+p+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>开启“POP3/SMTP服务”，并将授权码记录下来，如果之前已经开启了服务，但忘记了授权码，可以点击“生成授权码”，看一下具体示例。</p><p><strong>发送简单邮件</strong></p><p>先看一下如何发送简单的文本内容。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> smtplib
<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText

<span class="token comment"># 发送者邮箱地址</span>
senderMail <span class="token operator">=</span> <span class="token string">&#39;xxxxxx@qq.com&#39;</span>
<span class="token comment"># 发送者 QQ 邮箱授权码</span>
authCode <span class="token operator">=</span> <span class="token string">&#39;xxxxxxxxx&#39;</span>
<span class="token comment"># 接收者邮箱地址</span>
receiverMail <span class="token operator">=</span> <span class="token string">&#39;xxxxxx@qq.com&#39;</span>
<span class="token comment"># 邮件主题</span>
subject <span class="token operator">=</span> <span class="token string">&#39;简单邮件&#39;</span>
<span class="token comment"># 邮件内容</span>
content <span class="token operator">=</span> <span class="token string">&#39;hello email&#39;</span>
msg <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">&#39;plain&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
msg<span class="token punctuation">[</span><span class="token string">&#39;Subject&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> subject
msg<span class="token punctuation">[</span><span class="token string">&#39;From&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> senderMail
msg<span class="token punctuation">[</span><span class="token string">&#39;To&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> receiverMail
<span class="token keyword">try</span><span class="token punctuation">:</span>
    server <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">&#39;smtp.qq.com&#39;</span><span class="token punctuation">,</span> smtplib<span class="token punctuation">.</span>SMTP_SSL_PORT<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;成功连接到邮件服务器&#39;</span><span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>login<span class="token punctuation">(</span>senderMail<span class="token punctuation">,</span> authCode<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;成功登录邮箱&#39;</span><span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>senderMail<span class="token punctuation">,</span> receiverMail<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;邮件发送成功&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> smtplib<span class="token punctuation">.</span>SMTPException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;邮件发送异常&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    server<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>发送复杂邮件</strong></p><p>我们知道有时候邮件内容，除了文本，还会有附件、图片等。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
<span class="token keyword">import</span> smtplib
<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>multipart <span class="token keyword">import</span> MIMEMultipart
<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText
<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>image <span class="token keyword">import</span> MIMEImage

<span class="token comment"># 发送者邮箱地址</span>
senderMail <span class="token operator">=</span> <span class="token string">&#39;xxxxxx@qq.com&#39;</span>
<span class="token comment"># 发送者 QQ 邮箱授权码</span>
authCode <span class="token operator">=</span> <span class="token string">&#39;xxxxxxxxx&#39;</span>
<span class="token comment"># 接收者邮箱地址</span>
receiverMail <span class="token operator">=</span> <span class="token string">&#39;xxxxxx@qq.com&#39;</span>
<span class="token comment"># 邮件主题</span>
subject <span class="token operator">=</span> <span class="token string">&#39;复杂邮件测试&#39;</span>
msgRoot <span class="token operator">=</span> MIMEMultipart<span class="token punctuation">(</span><span class="token string">&#39;related&#39;</span><span class="token punctuation">)</span>
msgRoot<span class="token punctuation">[</span><span class="token string">&#39;Subject&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> subject
msgRoot<span class="token punctuation">[</span><span class="token string">&#39;From&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> senderMail
msgRoot<span class="token punctuation">[</span><span class="token string">&#39;To&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> receiverMail
msgAtv <span class="token operator">=</span> MIMEMultipart<span class="token punctuation">(</span><span class="token string">&#39;alternative&#39;</span><span class="token punctuation">)</span>
msgRoot<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>msgAtv<span class="token punctuation">)</span>
<span class="token comment"># html</span>
html_content <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;
&lt;p&gt;我的博客地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#39;https://blog.csdn.net/cyy_j&#39;&gt;点击进入我的CSDN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的公众号二维码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;cid:image&quot;&gt;&lt;/p&gt;
&#39;&#39;&#39;</span>
html <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>html_content<span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
msgAtv<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>html<span class="token punctuation">)</span>
f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;qrcode.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span>
msgImage <span class="token operator">=</span> MIMEImage<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
msgImage<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">&#39;Content-ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;image&gt;&#39;</span><span class="token punctuation">)</span>
msgRoot<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>msgImage<span class="token punctuation">)</span>
<span class="token comment"># 附件</span>
annex <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;test.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
annex<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;application/octet-stream&#39;</span>
annex<span class="token punctuation">[</span><span class="token string">&#39;Content-Disposition&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;attachment; filename=&quot;test.txt&quot;&#39;</span>
msgRoot<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>annex<span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    server <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">&#39;smtp.qq.com&#39;</span><span class="token punctuation">,</span> smtplib<span class="token punctuation">.</span>SMTP_SSL_PORT<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;成功连接到邮件服务器&#39;</span><span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>login<span class="token punctuation">(</span>senderMail<span class="token punctuation">,</span> authCode<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;成功登录邮箱&#39;</span><span class="token punctuation">)</span>
    server<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>senderMail<span class="token punctuation">,</span> receiverMail<span class="token punctuation">,</span> msgRoot<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;邮件发送成功&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> smtplib<span class="token punctuation">.</span>SMTPException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;邮件发送异常&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    server<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个发送的是一段html代码。</p><h2 id="_2-收取邮件" tabindex="-1"><a class="header-anchor" href="#_2-收取邮件"><span>2.收取邮件</span></a></h2><p>POP3 全称 Post Office Protocol - Version 3，3 是版本号，中文译为邮局协议，该协议可以实现邮件的收取，Python 的 poplib 模块实现了该协议。</p><p><strong>poplib.POP3(host, port=POP3_PORT[, timeout])</strong></p><p>实现 POP3 的类。参数说明如下：</p><ul><li>host：主机。</li><li>port：端口号。</li><li>timeout：可选参数，超时时间。</li></ul><p><strong>poplib.POP3_SSL(host, port=POP3_SSL_PORT, keyfile=None, certfile=None, timeout=None, context=None)</strong></p><p>POP3 通过 SSL 加密套接字连接到服务器的子类。自版本 3.6 起不推荐使用 keyfile 和 certfile，而推荐使用 context。</p><p>看一下邮件获取及解析示例。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> poplib
<span class="token keyword">from</span> email<span class="token punctuation">.</span>parser <span class="token keyword">import</span> Parser
<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> decode_header<span class="token punctuation">,</span>Header
<span class="token keyword">from</span> email<span class="token punctuation">.</span>utils <span class="token keyword">import</span> parseaddr

<span class="token keyword">def</span> <span class="token function">print_email</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> header <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;From&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;To&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Subject&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        value <span class="token operator">=</span> msg<span class="token punctuation">.</span>get<span class="token punctuation">(</span>header<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> value<span class="token punctuation">:</span>
            <span class="token keyword">if</span> header <span class="token operator">==</span> <span class="token string">&#39;Subject&#39;</span><span class="token punctuation">:</span>
                value <span class="token operator">=</span> decode_str<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                hdr<span class="token punctuation">,</span> addr <span class="token operator">=</span> parseaddr<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                name <span class="token operator">=</span> decode_str<span class="token punctuation">(</span>hdr<span class="token punctuation">)</span>
                value <span class="token operator">=</span> <span class="token string">u&#39;%s &lt;%s&gt;&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> addr<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%s: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>header<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 获取邮件主体信息</span>
    attachment_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> part <span class="token keyword">in</span> msg<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取附件名称类型</span>
        file_name <span class="token operator">=</span> part<span class="token punctuation">.</span>get_filename<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 获取数据类型</span>
        contentType <span class="token operator">=</span> part<span class="token punctuation">.</span>get_content_type<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 获取编码格式</span>
        mycode <span class="token operator">=</span> part<span class="token punctuation">.</span>get_content_charset<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> file_name<span class="token punctuation">:</span>
            h <span class="token operator">=</span> Header<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>
            <span class="token comment"># 对附件名称进行解码</span>
            dh <span class="token operator">=</span> decode_header<span class="token punctuation">(</span>h<span class="token punctuation">)</span>
            filename <span class="token operator">=</span> dh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> dh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                <span class="token comment"># 将附件名称可读化</span>
                filename <span class="token operator">=</span> decode_str<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> dh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            attachment_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
            <span class="token comment"># 下载附件</span>
            data <span class="token operator">=</span> part<span class="token punctuation">.</span>get_payload<span class="token punctuation">(</span>decode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            <span class="token comment"># 在当前目录下创建文件</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                <span class="token comment"># 保存附件</span>
                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> contentType <span class="token operator">==</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">:</span>
            data <span class="token operator">=</span> part<span class="token punctuation">.</span>get_payload<span class="token punctuation">(</span>decode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            content <span class="token operator">=</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>mycode<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;正文：&#39;</span><span class="token punctuation">,</span>content<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> contentType <span class="token operator">==</span> <span class="token string">&#39;text/html&#39;</span><span class="token punctuation">:</span>
            data <span class="token operator">=</span> part<span class="token punctuation">.</span>get_payload<span class="token punctuation">(</span>decode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            content <span class="token operator">=</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>mycode<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;正文：&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;附件名列表：&#39;</span><span class="token punctuation">,</span> attachment_files<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">decode_str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    value<span class="token punctuation">,</span> charset <span class="token operator">=</span> decode_header<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> charset<span class="token punctuation">:</span>
        value <span class="token operator">=</span> value<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>charset<span class="token punctuation">)</span>
    <span class="token keyword">return</span> value

<span class="token comment"># 接收者邮箱地址</span>
receiverMail <span class="token operator">=</span> <span class="token string">&#39;xxxxxx@qq.com&#39;</span>
<span class="token comment"># 接收者 QQ 邮箱授权码</span>
authCode <span class="token operator">=</span> <span class="token string">&#39;xxxxxxxxx&#39;</span>
pop3_server <span class="token operator">=</span> <span class="token string">&#39;pop.qq.com&#39;</span>
<span class="token comment"># 连接到 POP3 服务器</span>
server <span class="token operator">=</span> poplib<span class="token punctuation">.</span>POP3_SSL<span class="token punctuation">(</span>pop3_server<span class="token punctuation">,</span> <span class="token number">995</span><span class="token punctuation">)</span>
<span class="token comment"># 身份认证</span>
server<span class="token punctuation">.</span>user<span class="token punctuation">(</span>receiverMail<span class="token punctuation">)</span>
server<span class="token punctuation">.</span>pass_<span class="token punctuation">(</span>authCode<span class="token punctuation">)</span>
<span class="token comment"># stat() 返回邮件数量和占用空间</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;邮件数量:%s  占用空间:%s&#39;</span> <span class="token operator">%</span> server<span class="token punctuation">.</span>stat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># list() 返回所有邮件的编号，lines 存储了邮件的原始文本的每一行</span>
resp<span class="token punctuation">,</span> mails<span class="token punctuation">,</span> octets <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>mails<span class="token punctuation">)</span>
<span class="token comment"># 获取最新一封邮件</span>
resp<span class="token punctuation">,</span> lines<span class="token punctuation">,</span> octets <span class="token operator">=</span> server<span class="token punctuation">.</span>retr<span class="token punctuation">(</span>index<span class="token punctuation">)</span>
msg_content <span class="token operator">=</span> <span class="token string">b&#39;\\r\\n&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 解析邮件</span>
msg <span class="token operator">=</span> Parser<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parsestr<span class="token punctuation">(</span>msg_content<span class="token punctuation">)</span>
print_email<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
<span class="token comment"># 根据邮件索引号直接从服务器删除邮件</span>
<span class="token comment"># server.dele(1)</span>
<span class="token comment"># 关闭连接</span>
server<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(e,[["render",i],["__file","Python 进阶(3)邮件的发送与收取.html.vue"]]),m=JSON.parse(`{"path":"/notes/python/%E8%BF%9B%E9%98%B6/Python%20%E8%BF%9B%E9%98%B6(3)%E9%82%AE%E4%BB%B6%E7%9A%84%E5%8F%91%E9%80%81%E4%B8%8E%E6%94%B6%E5%8F%96.html","title":"Python 进阶(3)邮件的发送与收取","lang":"zh-CN","frontmatter":{"title":"Python 进阶(3)邮件的发送与收取","date":"2024-05-16T00:00:00.000Z","description":"1.发送邮件 SMTP 全称 Simple Mail Transfer Protocol，中文译为简单邮件传输协议，它能跨越网络传输邮件，可实现相同网络处理进程之间的邮件传输，也可通过中继器或网关实现进程与其他网络之间的邮件传输。 Python 的 smtplib 模块对 SMTP 做了封装，可以很方便的实现邮件的发送，同时提供了 email 模块来构...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E8%BF%9B%E9%98%B6/Python%20%E8%BF%9B%E9%98%B6(3)%E9%82%AE%E4%BB%B6%E7%9A%84%E5%8F%91%E9%80%81%E4%B8%8E%E6%94%B6%E5%8F%96.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 进阶(3)邮件的发送与收取"}],["meta",{"property":"og:description","content":"1.发送邮件 SMTP 全称 Simple Mail Transfer Protocol，中文译为简单邮件传输协议，它能跨越网络传输邮件，可实现相同网络处理进程之间的邮件传输，也可通过中继器或网关实现进程与其他网络之间的邮件传输。 Python 的 smtplib 模块对 SMTP 做了封装，可以很方便的实现邮件的发送，同时提供了 email 模块来构..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T14:07:01.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T14:07:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 进阶(3)邮件的发送与收取\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-18T14:07:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.发送邮件","slug":"_1-发送邮件","link":"#_1-发送邮件","children":[]},{"level":2,"title":"2.收取邮件","slug":"_2-收取邮件","link":"#_2-收取邮件","children":[]}],"git":{"createdTime":1716041221000,"updatedTime":1716041221000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":1}]},"readingTime":{"minutes":4.2,"words":1259},"filePathRelative":"notes/python/进阶/Python 进阶(3)邮件的发送与收取.md","localizedDate":"2024年5月16日","excerpt":"<h2>1.发送邮件</h2>\\n<p>SMTP 全称 Simple Mail Transfer Protocol，中文译为简单邮件传输协议，它能跨越网络传输邮件，可实现相同网络处理进程之间的邮件传输，也可通过中继器或网关实现进程与其他网络之间的邮件传输。</p>\\n<p>Python 的 smtplib 模块对 SMTP 做了封装，可以很方便的实现邮件的发送，同时提供了 email 模块来构造邮件。</p>\\n<p><strong>smtplib.SMTP(host='', port=0, local_hostname=None, [timeout, ]source_address=None)</strong></p>","autoDesc":true}`);export{d as comp,m as data};
