import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as l,a as n,f as e,b as c,e as s}from"./app-Dv3cEzSJ.js";const o={},d=s('<h2 id="正向代理与反向代理" tabindex="-1"><a class="header-anchor" href="#正向代理与反向代理"><span>正向代理与反向代理：</span></a></h2><p>前言：</p><p>其实正向代理和反向代理最主要的区别是感知方的区别。</p><p>正向代理一般做的事情是访问无法访问的东西</p><p>反向代理是让你以为你访问的就是真实的服务方</p><h3 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理"><span>正向代理：</span></a></h3><p>操作方是你自己，你通过中间商访问对应的信息。</p><p>比如VPN的翻墙操作。</p><p>你做的事情是访问代理服务器，让代理服务器去访问资源。</p><p>最主要的是，你知道你最终要访问的服务是什么，在哪里，只是限于你不能访问或者你不想让服务方知道你访问了。所以使用了代理服务，让其代为访问。</p><p>类似于诈骗商家的效果</p><p>像是VPN就是正向代理</p><h3 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理"><span>反向代理：</span></a></h3><p>操作方也是自己，你要访问的就是代理服务器。</p><p>你不知道真实的服务是什么，你只是想要获得对应的资源。</p><p>代理服务器就是中间商，让你觉得访问的就是真实的服务器。</p><p>类似于诈骗客户的效果。</p><p>像是一些镜像网站、还有一些套壳AI的中间商网站，都是这种。</p><p>总结：其实所谓的正向代理和反向代理都差不多，区分的方法就是感知方而已。</p>',19),r={href:"https://blog.csdn.net/weixin_44404384/article/details/114675894",target:"_blank",rel:"noopener noreferrer"},u=s(`<h2 id="基础配置" tabindex="-1"><a class="header-anchor" href="#基础配置"><span>基础配置：</span></a></h2><p>include：引入配置信息</p><p>sendfile：直接返回文件，让客户进行文件下载，不在nginx做文件读写处理。</p><p>server：服务，虚拟主机，可配置多个，监听多个端口。那么他启动时就会把端口占用了吗？可以试试</p><p>location：路径匹配</p><p>error_page：错误码，可以写多个 后面跟上错误匹配的转向地址</p><h2 id="虚拟主机原理" tabindex="-1"><a class="header-anchor" href="#虚拟主机原理"><span>虚拟主机原理：</span></a></h2><p>离了大谱了，说了个寂寞</p><h2 id="域名解析" tabindex="-1"><a class="header-anchor" href="#域名解析"><span>域名解析：</span></a></h2><p>阿里云里面买。</p><p>可以往内网解析。</p><p>突然理解了为什么可以向内网解析了。这个和什么内网穿透啥的没关系。DNS说白了就是一个IP指向的向导，会把你从对应域名引导指定的IP，说白了，并不是它进行了网络访问。是你拿到真实IP之后再访问的。所以如果别人的主机上也有这个IP地址，它也可以实现转向。突然顿悟了。只是因为网络的DNS服务器比较厉害，能够让所有人都访问到。</p><p>本地如何做域名泛解析？</p><h2 id="虚拟主机配置" tabindex="-1"><a class="header-anchor" href="#虚拟主机配置"><span>虚拟主机配置：</span></a></h2><p>端口号可以相同，但是在同事server_name不能相同</p><p>server_name 可以配置多个，通过空格隔开，可以有通配符<code>*</code>，可以写正则以<code>~</code>开头。案例：<code>^[0-9]+\\.caoyunyou\\.com$</code></p><p>匹配规则：</p><p>全匹配会找到资源，匹配不上就会找到第一个配置</p><p>前面匹配上，就不会往后找了</p><p>隧道式、DR模型【lvs】</p><h2 id="反向代理使用" tabindex="-1"><a class="header-anchor" href="#反向代理使用"><span>反向代理使用：</span></a></h2><p>如果配置的域名如果是顶级域名</p><p>upstream：别名，和server同一级。擦，想错了。</p><p>案例：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">upstream</span> [别名]</span><span class="token punctuation">{</span>
    <span class="token comment"># weight 权重配置</span>
    <span class="token directive"><span class="token keyword">server</span>	192.168.20.11 weight=2</span><span class="token punctuation">;</span> 
    <span class="token comment"># down 不参与负载均衡，下线</span>
    <span class="token directive"><span class="token keyword">server</span>	192.168.20.12 weight=4 down</span><span class="token punctuation">;</span>
    <span class="token comment"># backup 都没了才用它，要是有的用，就不用它了</span>
	<span class="token directive"><span class="token keyword">server</span>	192.168.20.13 weight=3 backup</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>负载均衡策略，上面的案例也是</p><p>ip_hash：相同的IP指向相同的服务器，</p><p>least_conn：最少连接访问</p><p>url_hash：根据用户访问的url定向转发请求</p><p>fair：根据后端服务器响应时间转发请求</p><h2 id="nginx动静分离" tabindex="-1"><a class="header-anchor" href="#nginx动静分离"><span>Nginx动静分离：</span></a></h2><p>使用Nginx服务器直接代理静态资源</p><p>案例：理解了，因为编译最后的文件格式可以知道都是传统的html项目，有css,img,js文件夹。</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token comment"># 代理CSS资源</span>
<span class="token directive"><span class="token keyword">location</span> /css</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">root</span> html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token directive"><span class="token keyword">location</span> /js</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">root</span> html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token directive"><span class="token keyword">location</span> /img</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">root</span> html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 正则一个解决</span>

<span class="token directive"><span class="token keyword">location</span> ~*/(css|js|img)</span><span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">root</span> html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>url_rewrite：</p><p>案例：匹配上会将路径修改为指定的参数</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token comment"># break 匹配到就返回</span>
<span class="token comment"># redirect 跳转到匹配路径返回302</span>
<span class="token comment"># permanent 跳转到匹配路径返回301</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> /</span><span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">rewrite</span> ^/user([0-9]+).html$	/user/handle?name=caoyunyou&amp;age=<span class="token variable">$1</span>		break</span><span class="token punctuation">;</span>
    proxy_pass http://192.168.20.11:8008
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="防盗链" tabindex="-1"><a class="header-anchor" href="#防盗链"><span>防盗链：</span></a></h2><p>对于refer进行限制</p><p>没有refer就说明一个事情，不是正常的浏览器访问。可以进行限制。</p><p>放在location里面</p><p>案例：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> /</span><span class="token punctuation">{</span>
    <span class="token comment"># 允许的来源</span>
    <span class="token directive"><span class="token keyword">valid_referers</span> 192.168.20.11</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">if($invalid_referer)</span></span><span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">return</span> <span class="token number">403</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token directive"><span class="token keyword">root</span> html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.html index.htm</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token comment"># none 没有来源</span>
<span class="token comment"># blocked 监测</span>
<span class="token comment"># server_names 一个或者多个url</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>后续补充，暂时停止 2024-05-05</p></div>`,46);function v(m,k){const a=t("ExternalLinkIcon");return p(),l("div",null,[d,n("p",null,[e("给一个连接："),n("a",r,[e("正向代理和反向代理详解（纯小白必看 最好懂的白话文教程）"),c(a)])]),u])}const b=i(o,[["render",v],["__file","Nginx基础.html.vue"]]),x=JSON.parse('{"path":"/notes/middleware/Nginx/Nginx%E5%9F%BA%E7%A1%80.html","title":"Nginx基础","lang":"zh-CN","frontmatter":{"title":"Nginx基础","date":"2024-05-04T00:00:00.000Z","description":"正向代理与反向代理： 前言： 其实正向代理和反向代理最主要的区别是感知方的区别。 正向代理一般做的事情是访问无法访问的东西 反向代理是让你以为你访问的就是真实的服务方 正向代理： 操作方是你自己，你通过中间商访问对应的信息。 比如VPN的翻墙操作。 你做的事情是访问代理服务器，让代理服务器去访问资源。 最主要的是，你知道你最终要访问的服务是什么，在哪里...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/middleware/Nginx/Nginx%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Nginx基础"}],["meta",{"property":"og:description","content":"正向代理与反向代理： 前言： 其实正向代理和反向代理最主要的区别是感知方的区别。 正向代理一般做的事情是访问无法访问的东西 反向代理是让你以为你访问的就是真实的服务方 正向代理： 操作方是你自己，你通过中间商访问对应的信息。 比如VPN的翻墙操作。 你做的事情是访问代理服务器，让代理服务器去访问资源。 最主要的是，你知道你最终要访问的服务是什么，在哪里..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"正向代理与反向代理：","slug":"正向代理与反向代理","link":"#正向代理与反向代理","children":[{"level":3,"title":"正向代理：","slug":"正向代理","link":"#正向代理","children":[]},{"level":3,"title":"反向代理：","slug":"反向代理","link":"#反向代理","children":[]}]},{"level":2,"title":"基础配置：","slug":"基础配置","link":"#基础配置","children":[]},{"level":2,"title":"虚拟主机原理：","slug":"虚拟主机原理","link":"#虚拟主机原理","children":[]},{"level":2,"title":"域名解析：","slug":"域名解析","link":"#域名解析","children":[]},{"level":2,"title":"虚拟主机配置：","slug":"虚拟主机配置","link":"#虚拟主机配置","children":[]},{"level":2,"title":"反向代理使用：","slug":"反向代理使用","link":"#反向代理使用","children":[]},{"level":2,"title":"Nginx动静分离：","slug":"nginx动静分离","link":"#nginx动静分离","children":[]},{"level":2,"title":"防盗链：","slug":"防盗链","link":"#防盗链","children":[]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":3.93,"words":1178},"filePathRelative":"notes/middleware/Nginx/Nginx基础.md","localizedDate":"2024年5月4日","excerpt":"<h2>正向代理与反向代理：</h2>\\n<p>前言：</p>\\n<p>其实正向代理和反向代理最主要的区别是感知方的区别。</p>\\n<p>正向代理一般做的事情是访问无法访问的东西</p>\\n<p>反向代理是让你以为你访问的就是真实的服务方</p>\\n<h3>正向代理：</h3>\\n<p>操作方是你自己，你通过中间商访问对应的信息。</p>\\n<p>比如VPN的翻墙操作。</p>\\n<p>你做的事情是访问代理服务器，让代理服务器去访问资源。</p>\\n<p>最主要的是，你知道你最终要访问的服务是什么，在哪里，只是限于你不能访问或者你不想让服务方知道你访问了。所以使用了代理服务，让其代为访问。</p>\\n<p>类似于诈骗商家的效果</p>","autoDesc":true}');export{b as comp,x as data};
