import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Jv8SdDP8.js";const p={},e=t(`<h2 id="_1-列表" tabindex="-1"><a class="header-anchor" href="#_1-列表"><span>1.列表</span></a></h2><h3 id="_1-1-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-简介"><span>1.1 简介</span></a></h3><p>Python 中没有数组，而是加入了功能更强大的列表（list），列表可以存储任何类型的数据，同一个列表中的数据类型还可以不同；列表是序列结构，可以进行序列结构的基本操作：索引、切片、加、乘、检查成员</p><h3 id="_1-2-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-2-基本使用"><span>1.2 基本使用</span></a></h3><p>➢ <strong>创建</strong></p><p>列表中所有元素都放在一个中括号<code>[]</code>中,相邻元素中间用逗号<code>,</code>进行分割</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">1</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>➢ <strong>访问</strong></p><p>通过索引访问列表中的值，还可以使用 <code>:</code> 截取范围内的元素</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l[0] --&gt;&#39;</span><span class="token punctuation">,</span>l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l[1:] --&gt;&#39;</span><span class="token punctuation">,</span>l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1024</span>
l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>➢ <strong>更新</strong></p><p>除了对列表中现有元素进行修改外，还可以使用 <code>append()</code> 向列表中添加新元素</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># 修改列表中第二个元素</span>
l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span>
<span class="token comment"># 向列表中添加新元素</span>
l<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l[1] --&gt;&#39;</span><span class="token punctuation">,</span>l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l --&gt;&#39;</span><span class="token punctuation">,</span>l<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">5</span>
<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>➢ <strong>删除</strong></p><p>使用 <code>del</code> 删除列表中元素</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># 删除列表中第二个元素</span>
<span class="token keyword">del</span> l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l --&gt;&#39;</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>➢ <strong>常用方法</strong></p><p>① <strong>count()</strong></p><p>统计列表中某个元素出现的次数</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l.count(&#39;d&#39;) --&gt;&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>② <strong>index()</strong></p><p>查找某个元素在列表中首次出现的位置（即索引）</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l.index(&#39;d&#39;) --&gt;&quot;</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>③ <strong>remove()</strong></p><p>移除列表中某个值的首次匹配项</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
l<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;l --&gt;&quot;</span><span class="token punctuation">,</span>l<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>④ <strong>sort()</strong></p><p>对列表中元素进行排序</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
l<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l --&gt;&#39;</span><span class="token punctuation">,</span>l<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>⑤ <strong>copy()</strong></p><p>复制列表</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
lc <span class="token operator">=</span> l<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;lc --&gt; &#39;</span><span class="token punctuation">,</span>lc<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lc <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-元组" tabindex="-1"><a class="header-anchor" href="#_2-元组"><span>2.元组</span></a></h2><h3 id="_2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-简介"><span>2.1 简介</span></a></h3><p>元组（tuple）与列表类似，但元组是不可变的，可简单将其看作是不可变的列表，元组常用于保存不可修改的内容</p><h3 id="_2-2-基本使用" tabindex="-1"><a class="header-anchor" href="#_2-2-基本使用"><span>2.2 基本使用</span></a></h3><p>➢ <strong>创建</strong></p><p>元组中所有元素都放在一个小括号 <code>()</code> 中，相邻元素之间用逗号 <code>,</code> 分隔</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>➢ <strong>访问</strong></p><p>与访问列表中元素类似</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t[0] --&gt;&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t[1:] --&gt;&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1024</span>
t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>➢ <strong>修改</strong></p><p>元组中元素不能被修改，我们要用重新赋值的方式操作</p><p>案例:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t --&gt; &#39;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>➢ <strong>删除</strong></p><p>元组中的元素不能被删除，我们只能删除整个元组</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">del</span> t
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t --&gt; &#39;</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>NameError<span class="token punctuation">:</span> name <span class="token string">&#39;t&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由于元组实例被删除,所以输出了异常信息</p><p>➢ <strong>常用方法</strong></p><p>① <strong>len()</strong></p><p>计算元组中元素个数</p><p>案例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;len(t) --&gt; &quot;</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>② <strong>max()</strong> 和 <strong>min()</strong></p><p>返回元组中元素最大、最小值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;max(t) --&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;min(t) --&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">min</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">max</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> f
<span class="token builtin">min</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>③ <strong>tuple()</strong></p><p>将列表转换为元组</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
t <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;t --&gt; &#39;</span>t<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>t <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,99),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","Python 基础(6)列表与元组.html.vue"]]),k=JSON.parse(`{"path":"/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(6)%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84.html","title":"Python 基础(6)列表与元组","lang":"zh-CN","frontmatter":{"title":"Python 基础(6)列表与元组","date":"2024-05-11T00:00:00.000Z","description":"1.列表 1.1 简介 Python 中没有数组，而是加入了功能更强大的列表（list），列表可以存储任何类型的数据，同一个列表中的数据类型还可以不同；列表是序列结构，可以进行序列结构的基本操作：索引、切片、加、乘、检查成员 1.2 基本使用 ➢ 创建 列表中所有元素都放在一个中括号[]中,相邻元素中间用逗号,进行分割 案例: ➢ 访问 通过索引访问列...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(6)%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 基础(6)列表与元组"}],["meta",{"property":"og:description","content":"1.列表 1.1 简介 Python 中没有数组，而是加入了功能更强大的列表（list），列表可以存储任何类型的数据，同一个列表中的数据类型还可以不同；列表是序列结构，可以进行序列结构的基本操作：索引、切片、加、乘、检查成员 1.2 基本使用 ➢ 创建 列表中所有元素都放在一个中括号[]中,相邻元素中间用逗号,进行分割 案例: ➢ 访问 通过索引访问列..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T14:40:49.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:published_time","content":"2024-05-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-16T14:40:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 基础(6)列表与元组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-16T14:40:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.列表","slug":"_1-列表","link":"#_1-列表","children":[{"level":3,"title":"1.1 简介","slug":"_1-1-简介","link":"#_1-1-简介","children":[]},{"level":3,"title":"1.2 基本使用","slug":"_1-2-基本使用","link":"#_1-2-基本使用","children":[]}]},{"level":2,"title":"2.元组","slug":"_2-元组","link":"#_2-元组","children":[{"level":3,"title":"2.1 简介","slug":"_2-1-简介","link":"#_2-1-简介","children":[]},{"level":3,"title":"2.2 基本使用","slug":"_2-2-基本使用","link":"#_2-2-基本使用","children":[]}]}],"git":{"createdTime":1715776912000,"updatedTime":1715870449000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":2}]},"readingTime":{"minutes":2.87,"words":860},"filePathRelative":"notes/python/基础/Python 基础(6)列表与元组.md","localizedDate":"2024年5月11日","excerpt":"<h2>1.列表</h2>\\n<h3>1.1 简介</h3>\\n<p>Python 中没有数组，而是加入了功能更强大的列表（list），列表可以存储任何类型的数据，同一个列表中的数据类型还可以不同；列表是序列结构，可以进行序列结构的基本操作：索引、切片、加、乘、检查成员</p>\\n<h3>1.2 基本使用</h3>\\n<p>➢ <strong>创建</strong></p>\\n<p>列表中所有元素都放在一个中括号<code>[]</code>中,相邻元素中间用逗号<code>,</code>进行分割</p>\\n<p>案例:</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token number\\">1</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1024</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'Python'</span><span class=\\"token punctuation\\">]</span>\\n</code></pre></div>","autoDesc":true}`);export{d as comp,k as data};
