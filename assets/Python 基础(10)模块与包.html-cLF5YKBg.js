import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,e as s}from"./app-D0Nm-BYw.js";const t="/assets/643-DdKZgWRe.jpg",i="/assets/644-De0EHbaw.jpg",p={},d=s('<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1 简介</span></a></h2><h3 id="_1-1-模块" tabindex="-1"><a class="header-anchor" href="#_1-1-模块"><span>1.1 模块</span></a></h3><p>Python 中一个以 <code>.py</code> 结尾的文件就是一个模块，模块中定义了变量、函数等来实现一些类似的功能。Python 有很多自带的模块（标准库）和第三方模块，一个模块可以被其他模块引用，实现了代码的复用性。</p><h3 id="_1-2-包" tabindex="-1"><a class="header-anchor" href="#_1-2-包"><span>1.2 包</span></a></h3><p>包是存放模块的文件夹，包中包含 <code>__init__.py</code> 和其他模块，<code>__init__.py</code> 可为空也可定义属性和方法，在 Python3.3 之前的版本，一个文件夹中只有包含 <code>__init__.py</code>，其他程序才能从该文件夹引入相应的模块、函数等，之后的版本没有 <code>__init__.py</code> 也能正常导入，简单来说就是 Python3.3 之前的版本，<code>__init__.py</code> 是包的标识，是必须要有的，之后的版本可以没有。</p><h2 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用"><span>2 使用</span></a></h2><h3 id="_2-1-创建" tabindex="-1"><a class="header-anchor" href="#_2-1-创建"><span>2.1 创建</span></a></h3><p><strong>创建包</strong></p><p>使用 PyCharm 创建包，步骤为：①打开 PyCharm 选中项目 ②右击鼠标选中 <code>New</code> 选项，然后再选中 <code>Python Package</code> 后单击鼠标，此时弹出创建窗口，如下所示：</p><p><img src="'+t+'" alt="图片" loading="lazy">我们填好名字后点击 <code>OK</code> 按钮即可。创建好后我们会发现 PyCharm 已经自动帮我们创建了空文件 <code>__init__.py</code>。</p><p><strong>创建模块</strong></p><p>使用 PyCharm 创建模块，步骤为：①选中刚刚创建的包 ②右击鼠标选中 <code>New</code> 选项，然后再选中 <code>Python File</code> 后单击鼠标，此时弹出创建窗口，如下所示：</p><figure><img src="'+i+`" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>我们填好名字后点击 <code>OK</code> 按钮即可。</p><p>我们创建包和模块的最终目录结构为：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
package
|- pg1
|- - __init__.py
|- - a.py
|- - b.py
|- pg2
|- - __init__.py
|- - c.py
|- - d.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>a.py</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>b.py</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>c.py</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>d.py</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-引用" tabindex="-1"><a class="header-anchor" href="#_2-2-引用"><span>2.2 引用</span></a></h3><p>从包中引入模块有如下两种方式：</p><p><code>import ...</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> 包名<span class="token number">1.</span>包名<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>模块名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>from ... import ...</code></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>from 包名1.包名2... import 模块名
from 包名1.包名2...模块名 import 变量名/函数名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们使用创建好的包和模块演示一下，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
# a 模块中引入 b 模块
import pg1.b
from pg1 import b

# a 模块中引入 c 模块
import pg2.c
from pg2 import c

# a 模块中引入 c 模块和 d 模块
import pg2.c,pg2.d
from pg2 import c,d

# a 模块中引入包 pg2 下的所有模块
from pg2 import *

# a 模块中引入 d 模块中函数 d()
from pg2.d import d
# 调用函数 d()
d()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),o=[d];function c(l,r){return e(),a("div",null,o)}const _=n(p,[["render",c],["__file","Python 基础(10)模块与包.html.vue"]]),v=JSON.parse('{"path":"/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(10)%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85.html","title":"Python 基础(10)模块与包","lang":"zh-CN","frontmatter":{"title":"Python 基础(10)模块与包","description":"1 简介 1.1 模块 Python 中一个以 .py 结尾的文件就是一个模块，模块中定义了变量、函数等来实现一些类似的功能。Python 有很多自带的模块（标准库）和第三方模块，一个模块可以被其他模块引用，实现了代码的复用性。 1.2 包 包是存放模块的文件夹，包中包含 __init__.py 和其他模块，__init__.py 可为空也可定义属性和...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/python/%E5%9F%BA%E7%A1%80/Python%20%E5%9F%BA%E7%A1%80(10)%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"曹云友的博客"}],["meta",{"property":"og:title","content":"Python 基础(10)模块与包"}],["meta",{"property":"og:description","content":"1 简介 1.1 模块 Python 中一个以 .py 结尾的文件就是一个模块，模块中定义了变量、函数等来实现一些类似的功能。Python 有很多自带的模块（标准库）和第三方模块，一个模块可以被其他模块引用，实现了代码的复用性。 1.2 包 包是存放模块的文件夹，包中包含 __init__.py 和其他模块，__init__.py 可为空也可定义属性和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-15T15:41:59.000Z"}],["meta",{"property":"article:author","content":"曹云友"}],["meta",{"property":"article:modified_time","content":"2024-05-15T15:41:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 基础(10)模块与包\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-15T15:41:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"曹云友\\",\\"url\\":\\"https://caoyunyou.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1 简介","slug":"_1-简介","link":"#_1-简介","children":[{"level":3,"title":"1.1 模块","slug":"_1-1-模块","link":"#_1-1-模块","children":[]},{"level":3,"title":"1.2 包","slug":"_1-2-包","link":"#_1-2-包","children":[]}]},{"level":2,"title":"2 使用","slug":"_2-使用","link":"#_2-使用","children":[{"level":3,"title":"2.1 创建","slug":"_2-1-创建","link":"#_2-1-创建","children":[]},{"level":3,"title":"2.2 引用","slug":"_2-2-引用","link":"#_2-2-引用","children":[]}]}],"git":{"createdTime":1715776912000,"updatedTime":1715787719000,"contributors":[{"name":"曹云友","email":"caoyunyou@foxmail.com","commits":1}]},"readingTime":{"minutes":2.05,"words":614},"filePathRelative":"notes/python/基础/Python 基础(10)模块与包.md","localizedDate":"2024年5月15日","excerpt":"<h2>1 简介</h2>\\n<h3>1.1 模块</h3>\\n<p>Python 中一个以 <code>.py</code> 结尾的文件就是一个模块，模块中定义了变量、函数等来实现一些类似的功能。Python 有很多自带的模块（标准库）和第三方模块，一个模块可以被其他模块引用，实现了代码的复用性。</p>\\n<h3>1.2 包</h3>\\n<p>包是存放模块的文件夹，包中包含 <code>__init__.py</code> 和其他模块，<code>__init__.py</code> 可为空也可定义属性和方法，在 Python3.3 之前的版本，一个文件夹中只有包含 <code>__init__.py</code>，其他程序才能从该文件夹引入相应的模块、函数等，之后的版本没有 <code>__init__.py</code> 也能正常导入，简单来说就是 Python3.3 之前的版本，<code>__init__.py</code> 是包的标识，是必须要有的，之后的版本可以没有。</p>","autoDesc":true}');export{_ as comp,v as data};
